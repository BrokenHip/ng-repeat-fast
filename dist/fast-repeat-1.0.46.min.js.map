{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","node_modules/f-xyz-diff/index.js","fast-repeat-1.0.46.min.js","src/index.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","fastRepeat","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length",1,"getUniqueId","lastUniqueId","maybe","x","y","undefined","buildHashToIndexMap","list","primaryKey","map","item","diff","newList","oldList","addEntry","state","newIndex","prevIndex","push","oldIndex","newIndexMap","oldIndexMap","newItem","oldItem","DIFF_DELETED","DIFF_CREATED","indexOfNewItemInOldList","indexOfOldItemInNewList","isCreated","isDeleted","DIFF_MOVED","DIFF_NOT_MODIFIED","NOT_MODIFIED","CREATED","MOVED","DELETED",2,"factory","fastRepeatLink","$scope","$element","$attrs","$parse","$compile","getModel","expression","renderChanges","prev","difference","trackBy","syncDom","prevNode","elementNode","forEach","diffEntry","nodeIndex","node","itemHashToNodeMap","getNodeIndex","insertAfter","showNode","createNode","hashKey","hideNode","afterNode","nextSibling","elementParentNode","insertBefore","appendChild","scope","$new","iteratorName","templateNode","cloneNode","amendItemScope","Object","defineProperties","$index","enumerable","get","$first","$last","$middle","$even","$odd","className","slice","absolute","nodeList","childNodes","index","indexOf","elementNodeIndex","HASH_KEY","rx","match","model","Array","isArray","String","parentNode","removeAttribute","unwatchModel","test","$watchCollection","$on","angular","directive","restrict","priority","terminal","link","f-xyz-diff"],"mappings":"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","file":"fast-repeat-1.0.46.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","'use strict';\n\nvar DIFF_NOT_MODIFIED = 0;\nvar DIFF_CREATED = 1;\nvar DIFF_MOVED = 2;\nvar DIFF_DELETED = -1;\n\nvar lastUniqueId = 0;\n\n/**\n * Returns auto incremental unique ID as integer.\n * @returns {number} integers starting from 0\n */\nfunction getUniqueId() {\n    return lastUniqueId++;\n}\n\n/**\n * Returns x if it is not undefined, y otherwise.\n * @param x\n * @param y\n * @returns {*}\n */\nfunction maybe(x, y) {\n    if (x !== undefined) return x;\n    return y;\n}\n\n/**\n * @param {Array} list\n * @param {string} primaryKey\n * @returns {{}}\n */\nfunction buildHashToIndexMap(list, primaryKey) {\n    var map = {};\n    for (var i = 0; i < list.length; ++i) {\n        var item = list[i];\n        map[item[primaryKey]] = i;\n    }\n    return map;\n}\n\n/**\n * Calculates difference between two arrays.\n * Returns array of { item: T, state: int }.\n * Where state means: 0 - not modified, 1 - created, -1 - deleted.\n * @param {Array} newList\n * @param {Array} oldList\n * @param {string} primaryKey item's unique index field name\n */\nfunction diff(newList, oldList, primaryKey) {\n    var diff = [];\n    var newIndex = 0;\n    var oldIndex = 0;\n\n    var newIndexMap = buildHashToIndexMap(newList, primaryKey);\n    var oldIndexMap = buildHashToIndexMap(oldList, primaryKey);\n\n    function addEntry(item, state, newIndex, prevIndex) {\n        diff.push({\n            item: item,\n            state: state,\n            oldIndex: prevIndex,\n            newIndex: newIndex\n        });\n    }\n\n    for (; newIndex < newList.length || oldIndex < oldList.length;) {\n        var newItem = newList[newIndex];\n        var oldItem = oldList[oldIndex];\n\n        if (newIndex >= newList.length) {\n\n            addEntry(oldItem, DIFF_DELETED, -1, oldIndex);\n            ++oldIndex;\n\n        } else if (oldIndex >= oldList.length) {\n\n            addEntry(newItem, DIFF_CREATED, newIndex, -1);\n            ++newIndex;\n\n        } else if (newItem !== oldItem) {\n\n            var indexOfNewItemInOldList =\n                maybe(oldIndexMap[newItem[primaryKey]], -1);\n\n            var indexOfOldItemInNewList =\n                maybe(newIndexMap[oldItem[primaryKey]], -1);\n\n            var isCreated = indexOfNewItemInOldList === -1;\n            var isDeleted = indexOfOldItemInNewList === -1;\n\n            // created\n            if (isCreated) {\n                addEntry(newItem, DIFF_CREATED, newIndex, -1);\n                ++newIndex;\n            }\n\n            // moved\n            if (!isCreated && !isDeleted) {\n                addEntry(newItem, DIFF_MOVED, newIndex, indexOfOldItemInNewList);\n                ++newIndex;\n                ++oldIndex;\n            }\n\n            // deleted\n            if (isDeleted) {\n                addEntry(oldItem, DIFF_DELETED, -1, oldIndex);\n                ++oldIndex;\n            }\n\n        } else {\n            addEntry(oldItem, DIFF_NOT_MODIFIED, newIndex, oldIndex);\n            ++newIndex;\n            ++oldIndex;\n        }\n    }\n\n    return diff;\n}\n\n// exports ////////////////////////////////////////////////////////////////\n\ndiff.NOT_MODIFIED = DIFF_NOT_MODIFIED;\ndiff.CREATED = DIFF_CREATED;\ndiff.MOVED = DIFF_MOVED;\ndiff.DELETED = DIFF_DELETED;\ndiff.getUniqueId = getUniqueId;\ndiff.buildHashToIndexMap = buildHashToIndexMap;\n\nmodule.exports = diff;\n",null,"(function (factory) {\n    if (typeof require == 'function') {\n        var diff = require('f-xyz-diff');\n        factory(module.exports, diff);\n    } else {\n        factory(window, window.diff);\n    }\n})(function fastRepeatMain(exports, diff) {\n    'use strict';\n\n    ///////////////////////////////////////////////////////////////////////////\n\n    exports.fastRepeat =\n         angular\n        .module('fastRepeat', [])\n        .directive('fastRepeat', function ($parse, $compile) {\n            return {\n                scope: true,\n                restrict: 'A',\n                priority: 1000,\n                terminal: true,\n                link: function ($scope, $element, $attrs) {\n                    fastRepeatLink($scope, $element, $attrs, $parse, $compile);\n                }\n            };\n        });\n\n    ///////////////////////////////////////////////////////////////////////////\n\n    /**\n     * @param $scope\n     * @param $element\n     * @param $parse\n     * @param $compile\n     * @param {{ fastRepeat: string }} $attrs\n     */\n    function fastRepeatLink($scope, $element, $attrs, $parse, $compile) {\n        // todo - directive: dont-evaluate-if-out-screen\n        // todo - animation support\n        // todo - garbage collection for DOM nodes (?) timer-based?\n\n        var HASH_KEY = '$$hashKey';\n\n        if ('ngInclude' in $attrs) {\n            throw Error('fastRepeat: ngInclude on repeated ' +\n                        'element is not supported. ' +\n                        'Please create inner element with ng-include.');\n        }\n\n        // parse ng-repeat expression /////////////////////////////////////////\n\n        var rx = /^\\s*(\\w+)\\sin\\s(.+?)(\\strack by\\s(.+?))?$/;\n        var match = $attrs.fastRepeat.match(rx);\n        if (!match) {\n            throw Error('fastRepeat: expected fastRepeat in form of ' +\n                        '`{item} in {array} [| filter, etc]` [track by \\'{field}\\'] ' +\n                        'but got `' + $attrs.fastRepeat + '`');\n        }\n\n        var iteratorName = match[1];\n        var expression = match[2];\n        var trackBy = match[4] || HASH_KEY;\n        var model = getModel();\n        if (!Array.isArray(model)) {\n            throw Error('fastRepeat: expected model `' + $attrs.fastRepeat + '` ' +\n                        'to be an array but got: ' + String(model));\n        }\n\n        // build DOM //////////////////////////////////////////////////////////\n\n        var itemHashToNodeMap = {};\n\n        var elementNode = $element[0];\n        var elementParentNode = elementNode.parentNode;\n        var elementNodeIndex = getNodeIndex(elementNode, true);\n        var templateNode = elementNode.cloneNode(true);\n        templateNode.removeAttribute('fast-repeat');\n\n        var prevNode = elementNode;\n        model.forEach(function (item) {\n            var node = createNode(item);\n            insertAfter(node, prevNode);\n            prevNode = node;\n            // store node\n            if (trackBy === HASH_KEY) {\n                item[trackBy] = diff.getUniqueId();\n            }\n            itemHashToNodeMap[item[trackBy]] = node;\n        });\n        hideNode(elementNode);\n\n        // watch model for changes if\n        // it is not one-time binding\n        var unwatchModel;\n        if (!/^::/.test(expression)) {\n            unwatchModel = $scope.$watchCollection(getModel, renderChanges);\n        }\n\n        ///////////////////////////////////////////////////////////////////\n\n        function getModel() {\n            return $parse(expression)($scope);\n        }\n\n        function renderChanges(list, prev) {\n            if (list === prev) return;\n\n            var difference = diff(list, prev, trackBy);\n\n            syncDom(difference);\n        }\n\n        function syncDom(difference) {\n            var prevNode = elementNode; // insert new node after me\n            difference.forEach(function (diffEntry, i) {\n                var item = diffEntry.item;\n                var node = itemHashToNodeMap[item[trackBy]];\n                var nodeIndex;\n\n                switch (diffEntry.state) {\n\n                    case diff.CREATED:\n                        if (node) {\n                            nodeIndex = getNodeIndex(node);\n                            if (nodeIndex != i) {\n                                insertAfter(node, prevNode);\n                            }\n                            showNode(node);\n                        } else {\n                            node = createNode(item);\n                            insertAfter(node, prevNode);\n                            var hashKey = diff.getUniqueId();\n                            item[trackBy] = hashKey;\n                            itemHashToNodeMap[hashKey] = node;\n                        }\n                        break;\n\n                    case diff.MOVED:\n                    case diff.NOT_MODIFIED:\n                        nodeIndex = getNodeIndex(node);\n                        if (nodeIndex != i) {\n                            insertAfter(node, prevNode);\n                        }\n                        break;\n\n                    case diff.DELETED:\n                        hideNode(node);\n                        //deleteNode(node);\n                        //delete itemHashToNodeMap[item[trackBy]];\n                        break;\n                }\n                prevNode = node;\n            });\n        }\n\n        // DOM operations /////////////////////////////////////////////////\n\n        function insertAfter(node, afterNode) {\n            if (afterNode.nextSibling) {\n                elementParentNode.insertBefore(node, afterNode.nextSibling);\n            } else {\n                elementParentNode.appendChild(node);\n            }\n        }\n\n        function createNode(item) {\n            var scope = $scope.$new();\n            scope[iteratorName] = item;\n\n            var node = templateNode.cloneNode(true);\n\n            amendItemScope(scope, node);\n            $compile(node)(scope);\n\n            return node;\n        }\n\n        function amendItemScope(scope, node) {\n            Object.defineProperties(scope, {\n                $index: {\n                    enumerable: true,\n                    get: function () {\n                        return getNodeIndex(node);\n                    }\n                },\n                $first: {\n                    enumerable: true,\n                    get: function () {\n                        return getNodeIndex(node) === 0;\n                    }\n                },\n                $last: {\n                    enumerable: true,\n                    get: function () {\n                        var length = getModel().length;\n                        return getNodeIndex(node) === length-1;\n                    }\n                },\n                $middle: {\n                    enumerable: true,\n                    get: function () {\n                        return !this.$first && !this.$last;\n                    }\n                },\n                $even: {\n                    enumerable: true,\n                    get: function () {\n                        return this.$index % 2 === 0;\n                    }\n                },\n                $odd: {\n                    enumerable: true,\n                    get: function () {\n                        return this.$index % 2 === 1;\n                    }\n                }\n            });\n            return scope;\n        }\n\n        function showNode(node) {\n            node.className = node.className.slice(0, -8);\n        }\n\n        function hideNode(node) {\n            node.className += ' ng-hide';\n        }\n\n        function getNodeIndex(node, absolute) {\n            var nodeList = elementParentNode.childNodes;\n            var index = [].indexOf.call(nodeList, node);\n            if (!absolute) {\n                index = index - elementNodeIndex - 1;\n            }\n            return index;\n        }\n\n        ///////////////////////////////////////////////////////////////////////////\n\n        $scope.$on('$destroy', function () {\n            unwatchModel();\n        });\n    }\n\n});\n"],"sourceRoot":"/source/"}